import{_ as s,r as i,o as p,c as l,a as e,b as t,d as r,e as a}from"./app.713299e2.js";const c={},n=a('<h1 id="_2-typescript初体验" tabindex="-1"><a class="header-anchor" href="#_2-typescript初体验" aria-hidden="true">#</a> 2.TypeScript初体验</h1><h2 id="_2-1-typescript-开发环境搭建" tabindex="-1"><a class="header-anchor" href="#_2-1-typescript-开发环境搭建" aria-hidden="true">#</a> 2.1 TypeScript 开发环境搭建</h2><p>问题：为什么要安装编译TS的工具包？</p><p>回答：Node.js/浏览器，只认识JS代码，不认识TS代码。需要将TS代码转化为JS代码，然后才能运行。</p><ol><li>下载Node.js <ul><li>64位：https://nodejs.org/dist/v14.15.1/node-v14.15.1-x64.msi</li><li>32位：https://nodejs.org/dist/v14.15.1/node-v14.15.1-x86.msi</li></ul></li><li>安装Node.js</li><li>使用pnpm全局安装typescript <ul><li>进入命令行</li><li>输入：pnpm i -g typescript</li></ul></li></ol><blockquote><ul><li>typescript 包：用来编译 TS 代码的包，提供了 <code>tsc</code> 命令，实现了 TS -&gt; JS 的转化</li><li>验证是否安装成功：tsc –v(查看 typescript 的版本)</li></ul></blockquote><p><img src="https://i0.hdslb.com/bfs/album/ee182b1c607104b3bf9d296af15389c0b49b14fd.png" alt="image-20220805183234278"></p><h2 id="_2-2-编译并运行ts代码" tabindex="-1"><a class="header-anchor" href="#_2-2-编译并运行ts代码" aria-hidden="true">#</a> 2.2 编译并运行TS代码</h2><ul><li><p>创建 hello.ts 文件（注意：<strong>TS 文件的后缀名为 <code>.ts</code></strong>）</p></li><li><p>将 TS 编译为 JS：在终端中输入命令，<code>tsc hello.ts</code>（此时，在同级目录中会出现一个同名的 JS 文件）</p></li><li><p>执行 JS 代码：在终端中输入命令，<code>node hello.js</code></p></li></ul><p>1 创建 ts 文件 ===&gt; 2 编译 TS ===&gt; 3 执行 JS</p><ul><li>说明：所有合法的 JS 代码都是 TS 代码，有 JS 基础只需要学习 TS 的类型即可</li><li>注意：由 TS 编译生成的 JS 文件，代码中就没有类型信息了</li></ul><p><strong>真正在开发过程中，其实不需要自己手动的通过 tsc 把 ts 文件转成 js 文件，这些工作应该交给webpack或者vite来完成</strong></p><h2 id="_2-3-简化运行ts的步骤" tabindex="-1"><a class="header-anchor" href="#_2-3-简化运行ts的步骤" aria-hidden="true">#</a> 2.3 简化运行TS的步骤</h2><p>问题描述：每次修改代码后，都要重复执行两个命令，才能运行TS代码，太繁琐。</p><p>简化方式：使用ts-node包，直接在Node.js中执行TS代码。</p><p>安装命令：<code>pnpm i -g ts-node</code>(ts-node包提供了ts-node命令)。</p><p>使用方式：<code>ts-node hello.ts</code>。(遇到错误了：在安装完ts-node之后执行这个使用命令会报错，原因是缺少安装东西，执行命令 <code>pnpm install -g tslib @types/node</code>)</p><p>解释：ts-node命令在内部偷偷的将TS-&gt;JS，然后，再运行JS代码。</p><h2 id="_2-4-官方playground" tabindex="-1"><a class="header-anchor" href="#_2-4-官方playground" aria-hidden="true">#</a> 2.4 官方playground</h2>',19),d={href:"https://link.juejin.cn?target=https%3A%2F%2Fwww.typescriptlang.org%2Fzh%2Fplay",target:"_blank",rel:"noopener noreferrer"},h=e("p",null,"基于它，我们无须在本地安装环境，只需要一个浏览器即可随时学习和编写 TypeScript，同时还可以方便地选择 TypeScript 版本、配置 tsconfig，并对 TypeScript 实时静态类型检测、转译输出 JavaScript 和在线执行。",-1),S=e("p",null,"而且在体验上，它也一点儿不逊色于任何本地的 IDE，对于刚刚学习 TypeScript 的我们来说，算是一个不错的选择",-1);function _(u,g){const o=i("ExternalLinkIcon");return p(),l("div",null,[n,e("p",null,[t("官方也提供了一个在线开发 TypeScript 的云环境——"),e("a",d,[t("Playground"),r(o)]),t("。")]),h,S])}const y=s(c,[["render",_],["__file","02.html.vue"]]);export{y as default};
