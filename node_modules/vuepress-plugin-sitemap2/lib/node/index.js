import{withSpinner as y,chalk as x,fs as w}from"@vuepress/utils";import{Logger as k}from"vuepress-shared/node";import{isLinkHttp as D,removeEndingSlash as F,removeLeadingSlash as O}from"@vuepress/shared";import{SitemapStream as G}from"sitemap";const $=new k("vuepress-plugin-sitemap2"),S=({options:e,deprecatedOption:n,newOption:a,msg:s="",scope:p=""})=>{if(n in e){if($.warn(`"${n}" is deprecated${p?` in ${p}`:""}, please use "${a}" instead.${s?`
${s}`:""}`),a.includes(".")){const l=a.split(".");let r=e;l.forEach((o,d)=>{d!==l.length-1?(r[o]=r[o]||{},r=r[o]):r[o]=e[n]})}else e[a]=e[n];delete e[n]}},U=e=>{S({options:e,deprecatedOption:"urls",newOption:"extraUrls"}),S({options:e,deprecatedOption:"exclude",newOption:"excludeUrls"}),S({options:e,deprecatedOption:"outFile",newOption:"sitemapFilename"}),S({options:e,deprecatedOption:"dateFormatter",newOption:"modifyTimeGetter"})},E=[],P=e=>({defaultPath:e.path.replace(e.pathLocale,"/"),pathLocale:e.pathLocale}),q=(e,n)=>{const{changefreq:a,excludeUrls:s=["/404.html"],modifyTimeGetter:p=t=>{var c;return(c=t.data.git)!=null&&c.updatedTime?new Date(t.data.git.updatedTime).toISOString():""}}=n,{pages:l,options:{base:r,locales:o}}=e,d=l.reduce((t,c)=>{const{defaultPath:u,pathLocale:g}=P(c),m=t.get(u)||[];return m.push(g),t.set(u,m)},new Map),h=new Map;return l.forEach(t=>{const c=t.frontmatter.sitemap||{},u=(t.frontmatter.head||[]).find(i=>i[1].name==="robots");if((u?(u[1].content||"").split(/,/u).map(i=>i.trim()).includes("noindex"):c.exclude)||s.includes(t.path))return;const g=p(t),{defaultPath:m}=P(t),f=d.get(m)||[];let v=[];f.length>1&&(e.env.isDebug&&f.forEach(i=>{!o[i].lang&&!E.includes(i)&&($.warn(`'lang' option for ${i} is missing`),E.push(i))}),v=f.map(i=>{var b;return{lang:((b=o[i])==null?void 0:b.lang)||"en",url:`${r}${O(m.replace(/^\//u,i))}`}}));const L={...a?{changefreq:a}:{},links:v,...g?{lastmod:g}:{},...c};e.env.isDebug&&$.info(`sitemap option for ${t.path}: ${JSON.stringify(L,null,2)}`),h.set(t.path,L)}),h},M=async(e,n)=>{const{extraUrls:a=[],xmlNameSpace:s}=n,p=D(n.hostname)?F(n.hostname):`https://${F(n.hostname)}`,l=n.sitemapFilename?O(n.sitemapFilename):"sitemap.xml",{dir:r,options:{base:o}}=e;await y(`Generating sitemap to ${x.cyan(l)}`)(()=>new Promise(h=>{const t=new G({hostname:p,...s?{xmlns:s}:{}}),c=q(e,n),u=r.dest(l),g=w.createWriteStream(u);t.pipe(g),c.forEach((m,f)=>t.write({url:`${o}${O(f)}`,...m})),a.forEach(m=>t.write({url:`${o}${O(m)}`})),t.end(()=>{h()})}));const d=r.dest("robots.txt");w.existsSync(d)&&await y(`Appended sitemap path to ${x.cyan("robots.txt")}`)(async()=>{const h=`${(await w.readFile(d,{encoding:"utf8"})).replace(/^Sitemap: .*$/u,"")}
Sitemap: ${p}${o}${l}
`;await w.writeFile(d,h,{flag:"w"})})},T=(e,n=!1)=>a=>{n&&U(e),a.env.isDebug&&$.info(`Options: ${e.toString()}`);const s={name:"vuepress-plugin-sitemap2"};return e.hostname?{...s,onGenerated:p=>M(p,e)}:($.error(`Option ${x.magenta("hostname")} is required!`),s)};export{T as default,T as sitemapPlugin};
//# sourceMappingURL=index.js.map
